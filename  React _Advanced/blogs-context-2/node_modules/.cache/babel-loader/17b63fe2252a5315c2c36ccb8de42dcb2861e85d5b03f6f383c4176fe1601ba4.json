{"ast":null,"code":"var _jsxFileName = \"/home/raushankumar/Desktop/Web-Development/ React _Advanced/blogs-context-2/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { useContext, useEffect } from \"react\";\nimport { AppContext } from \"./context/AppContext\";\nimport Header from \"./components/Header\";\nimport Blogs from \"./components/Blogs\";\nimport Pagination from \"./components/Pagination\";\nimport BlogDetails from \"./components/BlogDetails\";\nimport { useLocation } from \"react-router-dom\";\nimport Home from \"./Pages/Home\";\nimport TagPage from \"./Pages/TagPage\";\nimport CategoryPage from \"./Pages/CategoryPage\";\nimport BlogPage from \"./Pages/BlogPage\";\nimport { Routes, Route, useSearchParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const {\n    fetchBlogPosts\n  } = useContext(AppContext);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  useEffect(() => {\n    var _searchParams$get;\n    const page = (_searchParams$get = searchParams.get(\"page\")) !== null && _searchParams$get !== void 0 ? _searchParams$get : 1;\n    if (location.pathname.includes(\"tags\")) {\n      const tag = location.pathname.split(\"/\").at(-1).replaceAll(\"-\", \" \");\n      fetchBlogPosts(Number(page), tag);\n    } else if (location.pathname.includes(\"categoies\")) {\n      const category = location.pathname.split(\"/\").at(-1).replaceAll(\"-\", \" \");\n      fetchBlogPosts(Number(page), null, category);\n    } else {\n      fetchBlogPosts(Number(page));\n    }\n  }, [location.pathname, location.search]);\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/blogs/:blogId\",\n      element: /*#__PURE__*/_jsxDEV(BlogPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 46\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/tags/:tag\",\n      element: /*#__PURE__*/_jsxDEV(TagPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 42\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/categories/:categorie\",\n      element: /*#__PURE__*/_jsxDEV(CategoryPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 54\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"qsw0VHIhR519w6wmWupHBqZdyQM=\", false, function () {\n  return [useSearchParams, useLocation];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useContext","useEffect","AppContext","Header","Blogs","Pagination","BlogDetails","useLocation","Home","TagPage","CategoryPage","BlogPage","Routes","Route","useSearchParams","jsxDEV","_jsxDEV","App","_s","fetchBlogPosts","searchParams","setSearchParams","location","_searchParams$get","page","get","pathname","includes","tag","split","at","replaceAll","Number","category","search","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/raushankumar/Desktop/Web-Development/ React _Advanced/blogs-context-2/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport { useContext, useEffect } from \"react\";\nimport { AppContext } from \"./context/AppContext\";\nimport Header from \"./components/Header\";\nimport Blogs from \"./components/Blogs\";\nimport Pagination from \"./components/Pagination\";\nimport BlogDetails from \"./components/BlogDetails\";\nimport { useLocation } from \"react-router-dom\";\nimport Home from \"./Pages/Home\";\nimport TagPage from \"./Pages/TagPage\";\nimport CategoryPage from \"./Pages/CategoryPage\";\nimport BlogPage from \"./Pages/BlogPage\";\nimport { Routes, Route, useSearchParams} from \"react-router-dom\";\n\n\n\nexport default function App() {\n  const {fetchBlogPosts} = useContext(AppContext);\n\n  const [searchParams, setSearchParams] = useSearchParams ();\n  const location= useLocation(); \n\n  useEffect( () => {\n    const page = searchParams.get(\"page\") ?? 1;\n\n    if(location.pathname.includes(\"tags\")) {\n\n      const tag = location.pathname.split(\"/\").at(-1).replaceAll(\"-\",\" \");\n      fetchBlogPosts(Number (page), tag );\n    }\n    else if(location.pathname.includes(\"categoies\")) {\n      const category = location.pathname.split(\"/\").at(-1).replaceAll(\"-\",\" \");\n      fetchBlogPosts(Number(page), null , category);\n    }\n\n    else{\n      fetchBlogPosts(Number(page));\n    }\n  }, [location.pathname, location.search] );\n  \n  \n\n  return (\n    <Routes>\n      <Route path=\"/\" element= {<Home/>} />\n      <Route path=\"/blogs/:blogId\" element= {<BlogPage/>} />\n      <Route path=\"/tags/:tag\" element= {<TagPage/>} />\n      <Route path=\"/categories/:categorie\" element= {<CategoryPage/>} />\n\n    </Routes>\n    \n  );\n}\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC7C,SAASC,UAAU,QAAQ,sBAAsB;AACjD,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,WAAW,MAAM,0BAA0B;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,OAAO,MAAM,iBAAiB;AACrC,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,SAASC,MAAM,EAAEC,KAAK,EAAEC,eAAe,QAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIjE,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM;IAACC;EAAc,CAAC,GAAGnB,UAAU,CAACE,UAAU,CAAC;EAE/C,MAAM,CAACkB,YAAY,EAAEC,eAAe,CAAC,GAAGP,eAAe,CAAE,CAAC;EAC1D,MAAMQ,QAAQ,GAAEf,WAAW,CAAC,CAAC;EAE7BN,SAAS,CAAE,MAAM;IAAA,IAAAsB,iBAAA;IACf,MAAMC,IAAI,IAAAD,iBAAA,GAAGH,YAAY,CAACK,GAAG,CAAC,MAAM,CAAC,cAAAF,iBAAA,cAAAA,iBAAA,GAAI,CAAC;IAE1C,IAAGD,QAAQ,CAACI,QAAQ,CAACC,QAAQ,CAAC,MAAM,CAAC,EAAE;MAErC,MAAMC,GAAG,GAAGN,QAAQ,CAACI,QAAQ,CAACG,KAAK,CAAC,GAAG,CAAC,CAACC,EAAE,CAAC,CAAC,CAAC,CAAC,CAACC,UAAU,CAAC,GAAG,EAAC,GAAG,CAAC;MACnEZ,cAAc,CAACa,MAAM,CAAER,IAAI,CAAC,EAAEI,GAAI,CAAC;IACrC,CAAC,MACI,IAAGN,QAAQ,CAACI,QAAQ,CAACC,QAAQ,CAAC,WAAW,CAAC,EAAE;MAC/C,MAAMM,QAAQ,GAAGX,QAAQ,CAACI,QAAQ,CAACG,KAAK,CAAC,GAAG,CAAC,CAACC,EAAE,CAAC,CAAC,CAAC,CAAC,CAACC,UAAU,CAAC,GAAG,EAAC,GAAG,CAAC;MACxEZ,cAAc,CAACa,MAAM,CAACR,IAAI,CAAC,EAAE,IAAI,EAAGS,QAAQ,CAAC;IAC/C,CAAC,MAEG;MACFd,cAAc,CAACa,MAAM,CAACR,IAAI,CAAC,CAAC;IAC9B;EACF,CAAC,EAAE,CAACF,QAAQ,CAACI,QAAQ,EAAEJ,QAAQ,CAACY,MAAM,CAAE,CAAC;EAIzC,oBACElB,OAAA,CAACJ,MAAM;IAAAuB,QAAA,gBACLnB,OAAA,CAACH,KAAK;MAACuB,IAAI,EAAC,GAAG;MAACC,OAAO,eAAGrB,OAAA,CAACR,IAAI;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrCzB,OAAA,CAACH,KAAK;MAACuB,IAAI,EAAC,gBAAgB;MAACC,OAAO,eAAGrB,OAAA,CAACL,QAAQ;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtDzB,OAAA,CAACH,KAAK;MAACuB,IAAI,EAAC,YAAY;MAACC,OAAO,eAAGrB,OAAA,CAACP,OAAO;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjDzB,OAAA,CAACH,KAAK;MAACuB,IAAI,EAAC,wBAAwB;MAACC,OAAO,eAAGrB,OAAA,CAACN,YAAY;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE5D,CAAC;AAGb;AAACvB,EAAA,CApCuBD,GAAG;EAAA,QAGeH,eAAe,EACvCP,WAAW;AAAA;AAAAmC,EAAA,GAJLzB,GAAG;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}