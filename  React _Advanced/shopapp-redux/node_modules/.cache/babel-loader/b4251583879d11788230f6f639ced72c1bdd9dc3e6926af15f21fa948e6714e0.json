{"ast":null,"code":"var _jsxFileName = \"/home/raushankumar/Desktop/Web-Development/ React _Advanced/shopapp-redux/src/components/Counter.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Counter = () => {\n  _s();\n  // useSelector is a hook that allows you to extract data from the Redux store state\n  // useSelector takes a function as an argument, which receives the entire Redux store state\n  // and returns the part of the state that you want to access\n  // In this case, we are accessing the value property of the Counter slice of the state\n  const Count = useSelector(state => state.Counter.value);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({}),\n      children: \"Increment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: Count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Decrement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_s(Counter, \"HO159l/4fOVdVIIuT8we5GkVJ9M=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Counter;\nexport default Counter;\nvar _c;\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["React","useDispatch","useSelector","jsxDEV","_jsxDEV","Counter","_s","Count","state","value","dispatch","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/raushankumar/Desktop/Web-Development/ React _Advanced/shopapp-redux/src/components/Counter.jsx"],"sourcesContent":["import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nconst Counter = () => {\n  // useSelector is a hook that allows you to extract data from the Redux store state\n  // useSelector takes a function as an argument, which receives the entire Redux store state\n  // and returns the part of the state that you want to access\n  // In this case, we are accessing the value property of the Counter slice of the state\nconst Count= useSelector((state) => state.Counter.value)\nconst dispatch = useDispatch();\n\n  return (\n    <div>\n\n      <button\n      onClick={() => dispatch ({})}\n      >\n      Increment\n    </button>\n    <br/>\n    <br/>\n\n    <div>{Count}</div>\n\n    <br/>\n    <br/>\n\n    <button>\n      Decrement\n    </button>\n\n    </div>\n  )\n}\n\nexport default Counter"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB;EACA;EACA;EACA;EACF,MAAMC,KAAK,GAAEL,WAAW,CAAEM,KAAK,IAAKA,KAAK,CAACH,OAAO,CAACI,KAAK,CAAC;EACxD,MAAMC,QAAQ,GAAGT,WAAW,EAAE;EAE5B,oBACEG,OAAA;IAAAO,QAAA,gBAEEP,OAAA;MACAQ,OAAO,EAAEA,CAAA,KAAMF,QAAQ,CAAE,CAAC,CAAC,CAAE;MAAAC,QAAA,EAC5B;IAEH;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eACTZ,OAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACLZ,OAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAELZ,OAAA;MAAAO,QAAA,EAAMJ;IAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO,eAElBZ,OAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACLZ,OAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAELZ,OAAA;MAAAO,QAAA,EAAQ;IAER;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEH;AAEV,CAAC;AAAAV,EAAA,CA9BKD,OAAO;EAAA,QAKAH,WAAW,EACPD,WAAW;AAAA;AAAAgB,EAAA,GANtBZ,OAAO;AAgCb,eAAeA,OAAO;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}